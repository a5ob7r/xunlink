#!/bin/bash

set -Cueo pipefail

wrap () {
  echo -n -e "$1"

  local -i first=1

  while read -r; do
    if (( first )); then
      echo -n -e "$REPLY"
      first=0
    else
      echo -n -e "\n$REPLY"
    fi
  done

  echo -e "$2"
}

# Whether or not can decorate with SGR.
#
# $NO_COLOR:
#   https://no-color.org/
# $YES_COLOR:
#   It is just my experimental and hobby environment, and is inverse to
#   $NO_COLOR. It means that must do decoration even if output target can't
#   interpret SGR or other ANSI Escape Sequences. This is actually for debug.
decoratable () {
  [[ -n ${YES_COLOR+1} || -z ${NO_COLOR+1} && -t 2 && $TERM != dumb ]]
}

error () {
  local left=''
  local right=''

  if decoratable; then
    left='\033[31m'
    right='\033[0m'
  fi

  wrap "$left" "$right"  >&2 <<<"$*"
}

warning () {
  local left=''
  local right=''

  if decoratable; then
    left='\033[33m'
    right='\033[0m'
  fi

  wrap "$left" "$right"  >&2 <<<"$*"
}

info () {
  echo "$*" >&2
}

readonly VERSION=0.1.0

declare dry_run=0
declare only_orphan=0
declare silent=0
declare verbose=0
declare -a args=()

while (( $# )); do
  case "$1" in
    -h | --help )
      echo -n -e "\
Descriptions:
  'unlink', with extra. This can take multiple filepath as arguments, and only
  unlinks symlinks.

Usages:
  xunlink [OPTION]... [FILE]...

Options:
  -d, --dry-run      Doesn't actually unlink. Should use with '-v'.
  -o, --only-orphan  Only unlinks orphaned symlink.
  -v, --verbose      Show verbose messages.
  -s, --silent       Suppress any messages.
  --version          Show version info and exit.
  -h, --help         Show this message and exit.
"
      exit 0
      ;;
    --version )
      info "$VERSION"
      exit 0
      ;;
    -x | --debug )
      # This is a hidden option.
      set -x
      shift
      ;;
    -d | --dry-run )
      dry_run=1
      shift
      ;;
    --only-orphan )
      only_orphan=1
      shift
      ;;
    -v | --verbose )
      verbose=1
      silent=0
      shift
      ;;
    -s | --silent )
      silent=1
      verbose=0
      shift
      ;;
    -- )
      shift

      if (( $# )); then
        args+=("$@")
        shift $#
      fi
      ;;
    -* )
      error "'$1' is an unknown option."
      exit 1
      ;;
    * )
      args+=("$1")
      shift
  esac
done

for f in "${args[@]}"; do
  if ! [[ -h $f ]]; then
    if (( !silent )); then
      warning "'$f' is not a symlink."
    fi

    continue
  fi

  if (( only_orphan )) && [[ -a $f ]]; then
    if (( !silent )); then
      warning "'$f' is not a orphaned symlink."
    fi

    continue
  fi

  if (( !dry_run )); then
    unlink "$f"
  fi

  if (( verbose )); then
    info "unlinked '$f'"
  fi
done
